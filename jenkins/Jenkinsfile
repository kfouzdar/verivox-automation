node {
    agent any
    def imageTag = "peterngtr/rest-demo:${env.BUILD_NUMBER}"
    def dockerHome = tool 'myDocker'

    environment {
        NODEJS_HOME = tool name: 'NodeJS 14.x', type: 'NodeJSInstallation'
        PATH = "${env.NODEJS_HOME}/bin:${env.PATH}"
    }

    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    // Clean and install dependencies
                    sh 'npm install'
                }
            }
        }

        stage("Initializing") {
        cleanWs();
        checkout scm;
        sh 'git reset --hard'
        env.PATH = "${dockerHome}/bin:${env.PATH}"
    }

    stage("Building Images") {
        sh "docker build -t ${imageTag} -f docker/Dockerfile ."
    }

    stage("Running Tests") {
        try {
            sh "jenkins/run-tests.sh ${env.BUILD_NUMBER}"
        }
        finally {
            sh "ls report/"
            allure includeProperties: false, jdk: '', results: [[path: 'report']]
        }

        stage('Run Tests') {
            steps {
                script {
                    // Run the tests
                    sh 'npx codeceptjs run'
                }
            }
        }

        stage('Generate Allure Report') {
            steps {
                script {
                    // Generate the Allure report
                    sh 'npx allure serve ./output/allure-results --clean'
                }
            }
        }

        stage('Publish Allure Report') {
            steps {
                allure([
                    includeProperties: false,
                    jdk: '',
                    properties: [],
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: 'output/allure-results']]
                ])
            }
        }
    }

    post {
        always {
            // Clean up workspace
            cleanWs()
        }
    }
}